# Generated by Django 2.0.7 on 2019-01-08 19:56

import dj_sports_manager.models
import dj_sports_manager.storage
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=128, null=True, unique=True, verbose_name='category slug')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='category name')),
                ('img', models.ImageField(blank=True, storage=dj_sports_manager.storage.OverwriteStorage(), upload_to=dj_sports_manager.models.image_upload_to, verbose_name='category img')),
                ('min_age', models.PositiveSmallIntegerField(verbose_name='category minimal age')),
                ('max_age', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='category maximal age')),
                ('summary', models.TextField(max_length=512, verbose_name='category summary')),
                ('description', markdownx.models.MarkdownxField(verbose_name='category description')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(blank=True, max_length=20, verbose_name='license number')),
                ('is_payed', models.BooleanField(verbose_name='license payed')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='licence creation date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='licence last modification date')),
            ],
            options={
                'verbose_name': 'license',
                'verbose_name_plural': 'licenses',
                'ordering': ('team', 'player'),
            },
        ),
        migrations.CreateModel(
            name='MedicalCertification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certif', models.FileField(upload_to=dj_sports_manager.models.image_upload_to, verbose_name='medical certification')),
                ('certif_valid', models.PositiveSmallIntegerField(choices=[(0, 'Certification not uploaded'), (1, 'Certification in validation'), (2, 'Certification valid'), (3, 'Certification rejected')], default=0, verbose_name='license medical certification validation')),
                ('start', models.DateTimeField(verbose_name='starting date')),
                ('end', models.DateTimeField(verbose_name='starting date')),
            ],
            options={
                'verbose_name': 'medical certification',
                'verbose_name_plural': 'medical certifications',
                'ordering': ('player',),
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('sex', models.CharField(choices=[('MA', 'Male'), ('FE', 'Female')], max_length=2, verbose_name='sex')),
                ('birthday', models.DateField(verbose_name='birthday')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('certif', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_sports_manager.MedicalCertification')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'player',
                'verbose_name_plural': 'players',
                'ordering': ('last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=128, null=True, unique=True, verbose_name='team slug')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='team name')),
                ('level', models.CharField(choices=[('FSGT 6x6', (('GOL', 'Gold'), ('SIL', 'Silver'), ('BRO', 'Bronze'))), ('FSGT 4x4', (('HAR', 'Hard'), ('MED', 'Medium'), ('EAS', 'Easy'))), ('FFVB', (('N1F', 'Elite Female'), ('N2F', 'National 2 Female'), ('R1F', 'Regional 1 Female'), ('R2F', 'Regional 2 Female'), ('R3F', 'Regional 3 Female'), ('DEPF', 'Departemental Female'), ('N1M', 'Elite Male'), ('N2M', 'National 2 Male'), ('R1M', 'Regional 1 Male'), ('R2M', 'Regional 2 Male'), ('R3M', 'Regional 3 Male'), ('DEPM', 'Departemental Male')))], max_length=4, verbose_name='team level')),
                ('sex', models.CharField(choices=[('MA', 'Male'), ('MI', 'Mixed'), ('FE', 'Female')], max_length=2, verbose_name='team sex')),
                ('url', models.URLField(verbose_name='team competition URL')),
                ('description', markdownx.models.MarkdownxField(verbose_name='team description')),
                ('img', models.ImageField(blank=True, storage=dj_sports_manager.storage.OverwriteStorage(), upload_to=dj_sports_manager.models.image_upload_to, verbose_name='team img')),
                ('is_recruiting', models.BooleanField(verbose_name='team recruitement')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_sports_manager.Category')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'team',
                'verbose_name_plural': 'teams',
                'ordering': ('sex', 'level', 'name'),
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_time_slot', models.PositiveSmallIntegerField(choices=[(0, 'Practice'), (1, 'Match')], verbose_name='time slot type')),
                ('day', models.PositiveSmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='time slot day')),
                ('start', models.TimeField(verbose_name='time slot starting time')),
                ('end', models.TimeField(verbose_name='time slot starting time')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_sports_manager.Team')),
            ],
            options={
                'verbose_name': 'practice',
                'verbose_name_plural': 'practices',
                'ordering': ('day',),
            },
        ),
        migrations.AddField(
            model_name='license',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_sports_manager.Player'),
        ),
        migrations.AddField(
            model_name='license',
            name='team',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dj_sports_manager.Team'),
        ),
    ]
